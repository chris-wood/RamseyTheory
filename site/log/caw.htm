<h3>Week 9</h3>
<p> 
	This week I worked on the following tasks:
	<ul>
		<li>Finalized and documented my experiments with $G_{127}$. A draft of the final report may be found <a href="caw_doc/SATreport.pdf">here</a>.</li>
		<li>I continued with the development of the survey on Folkman numbers. You may view the latest document <a href="caw_doc/FolkmanSurvey.pdf">here</a>.</li>
	</ul>
</p>
<hr/>
<h3>Week 8</h3>
<p> 
	This week I worked on the following tasks:
	<ul>
		<li>Started writing code to translate an arrowing problem into an equivalent SDP problem (based on a discussion with Alex).</li>
		<li>
			<p>
				Continued more expansive experiments subgraphs $H$ of $G_{127}$. I found that intelligent selection of edges to color (variables
				to fix) in the corresponding formula $\phi_{H}$ yielded good 2/3 clause ratios. In particular, selecting edges that were
				disjoint (i.e. not belonging to the same triangle) drastically bumped up this ratio to around 0.07 from 0.02. In general,
				for subgraphs $H$ on the order of $90$ vertices with a 2/3 ratio of 0.06 or higher, the solvers can decide in a matter of
				seconds. If this ratio is lower, the solver does not terminate in any reasonable amount of time. 
			</p>
			<p>
				Also, it was interesting to observe that by adding edges to a subgraph $H$ on $90$ vertices such that $K_4$ was avoided,
				the average number of clauses of size 3 dropped among a sample of 1000 formulas when compared to the same subgraph
				without edges added. Granted, quite a bit of edges needed to be added to make this work (i.e. 500 edges were needed to 
				drop the average of 3 clauses down from 6036 to 5892), but increasing this number might help solving the formulas
				easier. 
			</p>
		</li>
		<li>I continued with the development of the survey on Folkman numbers. You may view the latest document <a href="caw_doc/FolkmanSurvey.pdf">here</a>.</li>
	</ul>
</p>
<hr/>
<h3>Week 7</h3>
<p>
	This week I worked on the following tasks:
	<ul>
		<li>Ran many hardness estimation experiments for $G_{127}$. These take a very long time to run, and with limited
			computational resources, I'm constrainted to running at most three experiments at once. I've made due, though. 
			You may view the results in the latest version of the SAT report located <a href="caw_doc/SATreport.pdf">here</a>.
		</li>
		<li>
			Expanded the SAT reduction code for more experimental parameters (e.g. adding edges while avoiding $K_4$s.),
			and also started writing code for other types of candidate graphs for $G \to (3,3;4)^e$, such as circulant
			graphs, GCD circulant graphs, random (and dense) $K_4$-free graphs, and Lu's circulant graphs 
			$L(m,s) = (Z_n, \{uv : u - v \in s^i \mod m, \gcd\{m,s\} = 1\})$.
		</li>
		<li>
			Continued my literature study for the <a href="caw_doc/FolkmanSurvey.pdf">Folkman survey</a>, and completely
			restructured the format of the entire document.
		</li>
	</ul>
</p>
<hr/>
<h3>Week 6</h3>
<p> 
	This week I worked on the following tasks:
	<ul>
		<li>Created SAT reduction experimental code suite - you may download a TAR archive containing
			all of the Python programs and bash scripts to run <a href="caw_doc/ExperimentSuite.tar">here</a>.
			Note that the Minisat binary must be executable from your shell (i.e. you should be able to just
			run 'minisat' from the terminal to start the program). See the usage notes inside injector.py
			for all of the parameters that can be tweaked for the experiments. You may see a list of useful parameters
			<a href="caw_doc/injectorParams.txt">here</a>. Note that a subset of the entire $2^r$ edge colorings that
			are fixed is sampled for the experiment, and that this subset may not be representative of the overall
			hardness of the induced subgraph. Therefore, several experiments will need to be conducted 
			to verify our estimates. 
		</li>
		<li>
			I expanded my SAT report to include more advanced heuristics for SAT solvers, as this will play
			a useful role in estimating the hardness of $G_{127}$. It also includes an outline of the
			new experimental approach for the hardness estimation. You may view the updated report 
			<a href="caw_doc/SATreport.pdf">here</a>.
		</li>
		<li>
			I spent a great deal of time working on and improving the Folkman survey, using the guidance 
			from Professor Radziszowski. The goal is to now make the survey mirror the CRC style of writing
			(see the CRC Handbook fo Applied Cryptography). You may view the updated survey 
			<a href="caw_doc/FolkmanSurvey.pdf">here</a>.
		</li>
		<li>
			I got set up with an OSG account in preparation for future computational tasks. 
		</li>
	</ul>
</p>
<hr/>
<h3>Week 5</h3>
<p> 
	This week I worked on the following tasks:
	<ul>
		<li>
			Expanded the graph reduction programs to begin experiments to estimate the hardness of $G_{127}$. 
			The estimation technique works as follows. First, a random subset of $n$ vertices is removed from $V(G)$,
			yielding an induced subgraph on $127 - n$ vertiecs. Then, $m$ random edges are chosen from the remaining 
			edge set (that are also part of the corresponding $\phi_G$), and for all $2^m$ possible edge colorings,
			$\phi_G$ is manually modified to aid the SAT solver in deciding the formula. Modifications include dropping
			clauses that evaluate to true, literals that evaluate to false, and performing unit literal propagation 
			throughout the entire formula. Once all $2^m$ modified formulas are generated, they are then run through Minisat
			(or another popular solver). Then, the estimated hardness is $\sum_{i=1}^{2^m}T(\phi_G^i)$, where
			$T(\phi_G^i)$ is the time for the solver to run for the $i$th configuration of the $m$ edge colorings.
			Unfortunately, for $n = 30$ and $m = 20$, these formulas still take a long time to run, and the average
			time collected over a small set of outputs yields an expected value of approximately 270 CPU years to complete.
			This may or may not be possible on the OSG.
		</li>
		<li>
			I continued my work on the Folkman survey and SAT report. You may view the details of these documents 
			<a href="caw_doc/FolkmanSurvey.pdf">here</a> and <a href="caw_doc/SATreport.pdf">here</a>. I need to start
			reviewing the contents of the survey with Professor Radziszowski to settle on an appropriate
			organizational structure for the long-term result.
		</li>
		<li>
			I expanded my arrowing code to solve the problem $F_e(3,5;13)$, posed by Nenov in 1981. He proved
			that $F_e(3,5;13) = 18$ if and only if $G = K_8 + C_5 + C_5 \to (3,5)^e$, and since 2008 no one was
			able to solve this. Converting this arrowing problem to an equivalent SAT formula led to an answer
			almost instantaneously, which showed that $G \to (3,5)^e$, and therefore $F_e(3,5;13) = 18$.
			You may view the new arrowing code <a href="caw_doc/reducerNew.txt">here</a>.
		</li>
	</ul>
</p>
<hr/>
<h3>Week 4</h3>
<p> 
	This week I worked on the following tasks:
	<ul>
		<li>
			Wrapped my graph reduction program <a href="caw_doc/reducer.txt">reducer.py</a> with another
			program <a href="caw_doc/injector.txt">injector.py</a> that can specify the number of vertices
			to remove, the format of removal (i.e. structured removal of independent sets or unstructured, random removal
			of vertices), the number of variables to assign to truth values in the corresponding CNF formula for
			the induced subgraph, and the propagation level (i.e. how many times to recursively propagate
			truth values through the clauses of $\phi_H$, where $H = G[V], V \subset V(G_{127})$) when assigning
			truth values. 
		</li>
		<li>
			I also ran experiments for structured removal of vertices as a preliminary estimate of the
			hardness of the satisfiability problem. You can view the results in the SAT report <a href="caw_doc/SATreport.pdf">here</a>.
			The CNF formulas generated for the subgraphs of $G$ with $n$ vertices removed are here: <a href="caw_doc/g127_43.cnf">43</a> (<a href="caw_doc/data/g127_43">output</a>), <a href="caw_doc/g127_44.cnf">44</a> (<a href="caw_doc/data/g127_44">output</a>), <a href="caw_doc/g127_45.cnf">45</a> (<a href="caw_doc/data/g127_45">output</a>), and <a href="caw_doc/g127_46.cnf">46</a> (<a href="caw_doc/data/g127_46">output</a>). 
		</li>
		<li>
			Continued working on the Folkman survey. As usual, you may view the working copy <a href="caw_doc/FolkmanSurvey.pdf">here</a>. Rather than posting the new papers that were read, you may view the bibliography contained therein.
		</li>
		<li>
			Tried to verify the (3,16;81) graph presented by Geoff Exoo with Mathematica. 
			You can view the resulting PDF <a href="caw_doc/g_3_16_81.pdf">here</a>. Finding the 
			maximum clique for the graph took a long time, so I had to terminate the process after a while.
		</li>
	</ul>
<hr/>
<h3>Week 3</h3>
<p>
	This week I worked on the following tasks:
	<ul>
		<li>$C_5$ permutation constructions - you can see all 12 permutations of $C_5$ <a href="caw_doc/c5permutations.mat">here</a>.</li>
		<li>Explored the four different $(K_3, J_{11};32,80)$ graphs proposed by Dr. Radziszowski. You can view the graphs in their pictoral form <a href="caw_doc/specialGraphs.pdf">here</a>. I am still working on trying to give a compact description of the first one.</li>
		<li>Continued looking at the $nauty$ bit-packing algorithm distributed by Dr. Radziszowski. I want to see if this can be applied to Alex's work with massive graphs to save space.</li>
		<li>Downloaded and installed the latest SAT solvers from the 2011 SAT competiton website shown <a href="http://www.satcompetition.org/">here</a>. I also began structuring the report that will compare the performance of these SAT solvers when trying to solve the $G_{127}$ conjecture. You can view the report <a href="caw_doc/SATreport.pdf">here</a>.</li>
	</ul>
</p>
<p>
	I also continued progress with the Folkman survey, documenting the major results from the following paper:
	<ul>
		<li>Kolev, Nikolay. "Bounds on Some Edge Folkman Numbers." arXiv e-prints arXiv:1001.1905v2 (2011).</li>
	</ul>
	<del>I will post the most recent version of the survey paper on 3/27/13.</del> <br/>
	The most recent version of the Folkman survey paper is <a href="caw_doc/FolkmanSurvey.pdf">here</a>.
</p>
<hr/>
<h3>Week 2</h3>
<p>
	This week I worked on the following tasks:
	<ul>
		<li>
			Began experimenting with techniques to reduce the order of $G_{127}$ to smaller graphs that can be 
			reduced to 3-SAT formulas to check for satisfiability. Currently, induced subgraphs containing approximately
			$80$ vertices can be solved very easily, but pushing this bound up towards $127$ becomes much more difficult.
			In particular, I tried to remove three sets of independent sets in $V \subset V(G_{127})$ such that $|V(G)| = 11$.
			After reducing this to an equivalent 3-SAT formula and running with Minisat I found that such reduction was not
			sufficient to make the program finish in a reasonable amount of time.

			The 3-SAT formula used for the entire graph of $G_{127}$ is <a href="caw_doc/g127.cnf">here</a> and the reduction 
			of $G_{127}$ obtained by removing three independent sets is <a href="caw_doc/out_3.cnf">here</a>.
		</li>
		<li>
			Continued my more in-depth exploration of nauty, with a focus on automorphism group generation and the underlying
			canonical labeling algorithm, as explained in Brendan McKay's paper: McKay, Brendan D. "Practical graph isomorphism." (1981): 45-87.
			I also started experimenting with Brendan McKay's new graph compression algorithm that was provided by Dr. Radziszowski.
		</li>
		<li>
			Continued my literature survey on Folkman numbers. In particular, I read the following papers and collected their major
			results in my survey paper.
			<ul>
				<li>
					Nenov, Nedyalko Dimov. "Chromatic number of graphs and edge Folkman numbers." arXiv preprint arXiv:1002.4332 (2010).
				</li>
				<li>
					Kolev, Nikolay. "New Upper Bound for the Edge Folkman Number $F_e(3,5;13)$." arXiv e-prints arXiv:0806.1403 (2008).
				</li>
				<li>
					Nenov, Nedyalko Dimov. "On the triangle vertex Folkman numbers." Discrete mathematics 271.1 (2003): 327-334.
				</li>
			</ul>
		</li>
	</ul>
</p>

<p>
	You may also find my source code for the graph arrowing property <a href="caw_doc/folkman.cpp">here</a>, as well
	as the source code for generating a DIMACS-compliant 3-SAT CNF formula for the problem 
	$G \to (3,3)^e$ <a href="caw_doc/reduce.txt">here</a>.
</p>
<hr/>
<h3>Week 1</h3>

<p>
	This week we began with an overview of Folkman numbers given by Professor Radziszowski. I spent my time reading some of his papers on the subject, including:
	<ul>
		<li>Lathrop, Joel and Stanislaw Radziszowski. "Computing the Folkman Number F_v(2,2,2,2,2;4). Journal of Combinatorial Mathematics and Combinatorial Computing, 78 (2011) 119-128.</li>
		<li>Radziszowski, Stanislaw and Xu Xiaodong. "On the Most Wanted Folkman Graph." Geombinatorics, Vol. XVI (4) (2007) 367-381.</li>
		<li>Lange, Alexander, Stanislaw Radziszowski, and Xiaodong Xu. "Use of MAX-CUT for Ramsey Arrowing of Triangles." To appear in the Journal of Combinatorial Mathematics and Combinatorial Computing.</li>
	</ul>
</p>

<p>
I also began preparing an introductory presentation for nauty to be given in Week 2. The focus of the talk was to introduce people to the 
inner workings of nauty, its main purposes, and how we can apply it in our research. You can view the presentation 
<a href="caw_doc/nauty_intro.pdf">here</a>. 
</p>

<hr/>
