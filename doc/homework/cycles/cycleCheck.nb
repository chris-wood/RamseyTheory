(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[     30700,        777]
NotebookOptionsPosition[     29717,        739]
NotebookOutlinePosition[     30074,        755]
CellTagsIndexPosition[     30031,        752]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"FromAdjacencyMatrix", "[", "]"}]], "Input",
 CellChangeTimes->{{3.5731555468886213`*^9, 3.573155549413108*^9}, {
  3.573155638904862*^9, 3.5731556395504017`*^9}}],

Cell[BoxData[
 RowBox[{"FromAdjacencyMatrix", "[", "]"}]], "Output",
 CellChangeTimes->{3.57315563999959*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["From adjacency matrix", "WolframAlphaLong",
 CellChangeTimes->{{3.573155641459125*^9, 3.57315564643783*^9}}],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "From adjacency matrix", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {30, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "http://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
    
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               TagBox["\"adjacency matrix\"", 
                $CellContext`TagBoxWrapper[
                "Entity" -> {$CellContext`MathWorldData, "AdjacencyMatrix"}]],
                Identity], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Illustration", "scanner" -> "Data", "id" -> 
     "ImagePod:MathWorldData", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{}, {
               InsetBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0.5, 1.}, {1., 0.5}}], {
                    GrayLevel[0]}}, {
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0., 0.5}, {1., 0.5}}], {
                    GrayLevel[0]}}, {
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0.5, 0.}, {1., 0.5}}], {
                    GrayLevel[0]}}}, {{
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{0.5, 1.}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["1", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {0.5, 1.}], {1, 0}]}, {
                    GrayLevel[0]}}, {
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{0., 0.5}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["2", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {0., 0.5}], {1, 0}]}, {
                    GrayLevel[0]}}, {
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{0.5, 0.}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["3", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {0.5, 0.}], {1, 0}]}, {
                    GrayLevel[0]}}, {
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{1., 0.5}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["4", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {1., 0.5}], {1, 0}]}, {
                    GrayLevel[0]}}}}, 
                  InsetBox[
                   BoxData[
                    FormBox[
                    RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "0", "1"}, {"0", "0", "0", "1"}, {
                    "0", "0", "0", "1"}, {"1", "1", "1", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                    TraditionalForm]], {0.5, -0.7}]}, AspectRatio -> 
                 Automatic, PlotRange -> All], {193.5, -321.3}, 
                ImageScaled[{0.5, 0.5}], {360., 612.0000000000001}], 
               InsetBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0.5, 1.}, {0.5, 0.}}], {
                    GrayLevel[0]}}, {
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0.5, 1.}, {1., 0.5}}], {
                    GrayLevel[0]}}, {
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0., 0.5}, {0.5, 0.}}], {
                    GrayLevel[0]}}, {
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0., 0.5}, {1., 0.5}}], {
                    GrayLevel[0]}}}, {{
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{0.5, 1.}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["1", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {0.5, 1.}], {1, 0}]}, {
                    GrayLevel[0]}}, {
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{0., 0.5}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["2", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {0., 0.5}], {1, 0}]}, {
                    GrayLevel[0]}}, {
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{0.5, 0.}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["3", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {0.5, 0.}], {1, 0}]}, {
                    GrayLevel[0]}}, {
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{1., 0.5}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["4", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {1., 0.5}], {1, 0}]}, {
                    GrayLevel[0]}}}}, 
                  InsetBox[
                   BoxData[
                    FormBox[
                    RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "0", "1", "1"}, {"0", "0", "1", "1"}, {
                    "1", "1", "0", "0"}, {"1", "1", "0", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                    TraditionalForm]], {0.5, -0.7}]}, AspectRatio -> 
                 Automatic, PlotRange -> All], {580.5, -321.3}, 
                ImageScaled[{0.5, 0.5}], {360., 612.0000000000001}], 
               InsetBox[
                GraphicsBox[{{{{
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0.5, 1.}, {0., 0.5}}], {
                    GrayLevel[0]}}, {
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0.5, 1.}, {0.5, 0.}}], {
                    GrayLevel[0]}}, {
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0.5, 1.}, {1., 0.5}}], {
                    GrayLevel[0]}}, {
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0., 0.5}, {0.5, 0.}}], {
                    GrayLevel[0]}}, {
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0., 0.5}, {1., 0.5}}], {
                    GrayLevel[0]}}, {
                    GrayLevel[0], 
                    Thickness[0.005], 
                    LineBox[{{0.5, 0.}, {1., 0.5}}], {
                    GrayLevel[0]}}}, {{
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{0.5, 1.}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["1", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {0.5, 1.}], {1, 0}]}, {
                    GrayLevel[0]}}, {
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{0., 0.5}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["2", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {0., 0.5}], {1, 0}]}, {
                    GrayLevel[0]}}, {
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{0.5, 0.}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["3", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {0.5, 0.}], {1, 0}]}, {
                    GrayLevel[0]}}, {
                    RGBColor[1, 0, 0], {
                    PointSize[0.1], 
                    PointBox[{1., 0.5}]}, {
                    GrayLevel[0], 
                    InsetBox[
                    BoxData[
                    FormBox["4", TraditionalForm]], 
                    Scaled[{-0.04, 0.04}, {1., 0.5}], {1, 0}]}, {
                    GrayLevel[0]}}}}, 
                  InsetBox[
                   BoxData[
                    FormBox[
                    RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"0", "1", "1", "1"}, {"1", "0", "1", "1"}, {
                    "1", "1", "0", "1"}, {"1", "1", "1", "0"}}, RowSpacings -> 
                    1, ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                    TraditionalForm]], {0.5, -0.7}]}, AspectRatio -> 
                 Automatic, PlotRange -> All], {967.5, -321.3}, 
                ImageScaled[{0.5, 0.5}], {360., 612.0000000000001}]}, {}}, {
             GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              Method -> {"GridLinesInFront" -> True}, 
              ImageSize -> {{500}, {200}}, BaseStyle -> 14, ContentSelectable -> 
              True, PlotRangePadding -> {6, 5}}], TraditionalForm]], 
          "Output"]}], 
       XMLElement["dataformats", {}, {}]}]}], Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Definition", "scanner" -> "Data", "id" -> 
     "DefinitionPod:MathWorldData", "position" -> "300", "error" -> "false", 
     "numsubpods" -> "1", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                Cell[
                 
                 TextData[{
                  "The adjacency matrix, sometimes also called the connection \
matrix, of a simple graph is a matrix with rows and columns labeled by graph \
vertices, with a 1 or 0 in position ", 
                   Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"(", 
                    RowBox[{
                    SubscriptBox["v", "i"], ",", 
                    SubscriptBox["v", "j"]}], ")"}], TraditionalForm]], 
                    "InlineFormula"], " according to whether ", 
                   Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["v", "i"], TraditionalForm]], 
                    "InlineFormula"], " and ", 
                   Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["v", "j"], TraditionalForm]], 
                    "InlineFormula"], 
                   " are adjacent or not. For a simple graph with no self\
\[Hyphen]loops, the adjacency matrix must have 0s on the diagonal. For an \
undirected graph, the adjacency matrix is symmetric. "}], 
                 LineSpacing -> {1, 3}]}, {
                Cell[
                 
                 TextData[{
                  "The adjacency matrix of a graph can be computed in ", 
                   StyleBox["Mathematica", FontSlant -> "Italic"], " using ", 
                   
                   StyleBox["AdjacencyMatrix", FontFamily -> "Courier"], "[", 
                   
                   StyleBox["g", FontSlant -> "Italic"], "], ", 
                   StyleBox["AdjacencyMatrix", FontFamily -> "Courier"], "[", 
                   
                   StyleBox["g", FontSlant -> "Italic"], "] in the ", 
                   StyleBox["Mathematica", FontSlant -> "Italic"], 
                   " package ", 
                   StyleBox["GraphUtilities \:0300", FontFamily -> "Courier"],
                    " , or using ", 
                   StyleBox["ToAdjacencyMatrix", FontFamily -> "Courier"], 
                   "[", 
                   StyleBox["g", FontSlant -> "Italic"], "] in the ", 
                   StyleBox["Mathematica", FontSlant -> "Italic"], 
                   " package ", 
                   StyleBox["Combinatorica \:0300", FontFamily -> "Courier"], 
                   " (as a full matrix)."}], LineSpacing -> {1, 3}]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}}, DefaultBaseStyle -> 
              "Column", 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxItemStyle -> {"Columns" -> {{
                   Directive[SpanMaxSize -> DirectedInfinity[1]]}}, 
                "Rows" -> {{
                   Directive[SpanMaxSize -> DirectedInfinity[1]]}}}], 
             "Column"], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/AdjacencyMatrix.html", 
           "text" -> "More information"}, {}]}]}]}], Typeset`pod4$$ = 
   XMLElement[
   "pod", {"title" -> "Related topics", "scanner" -> "Data", "id" -> 
     "RelatedTopicsPod:MathWorldData", "position" -> "400", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               FormBox[
                TagBox[
                 TagBox["\"adjacency list\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`MathWorldData, "AdjacencyList"}]],
                  Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"incidence matrix\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`MathWorldData, 
                    "IncidenceMatrix"}]], Identity], TraditionalForm], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               FormBox[
                TagBox[
                 TagBox["\"integer matrix\"", 
                  $CellContext`TagBoxWrapper[
                  "Entity" -> {$CellContext`MathWorldData, "IntegerMatrix"}]],
                  Identity], TraditionalForm]}], 
             LinebreakAdjustments -> {1, 10, 0, 0, 100}, LineIndent -> 0], 
            TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Subject classifications", "scanner" -> "Data", "id" -> 
     "SubjectPod:MathWorldData", "position" -> "500", "error" -> "false", 
     "numsubpods" -> "2"}, {
     XMLElement["subpod", {"title" -> "MathWorld"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{
               TagBox[
                TagBox["\"graph matrices\"", 
                 $CellContext`TagBoxWrapper[
                 "EntityClass" -> {$CellContext`MathWorldData, 
                    "Discrete Mathematics:Graph Theory:Graph Properties:Graph \
Matrices"}]], Identity], 
               StyleBox[
                RowBox[{"\[NoBreak]", 
                  PaneBox[
                  "\" | \"", BaselinePosition -> Baseline, BaseStyle -> 
                   GrayLevel[0.6]]}], AutoSpacing -> True], 
               TagBox[
                TagBox["\"matrix types\"", 
                 $CellContext`TagBoxWrapper[
                 "EntityClass" -> {$CellContext`MathWorldData, 
                    "Algebra:Linear Algebra:Matrices:Matrix Types"}]], 
                Identity]}], LinebreakAdjustments -> {1, 10, 0, 0, 100}, 
             LineIndent -> 0], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> "MSC 2010"}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox["\"15-XX\"", 
              $CellContext`TagBoxWrapper[
              "EntityClass" -> {$CellContext`MathWorldData, "15-XX"}]], 
             Identity], TraditionalForm]], "Output"]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Show details", "input" -> 
         "SubjectPod:MathWorldData__Show details"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False, False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {
    XMLElement["warnings", {"count" -> "1"}, {
      XMLElement[
      "reinterpret", {
       "text" -> "Using closest Wolfram|Alpha interpretation:", "new" -> 
        "adjacency matrix", "score" -> "0.481027", "level" -> 
        "medium"}, {}]}]}, Typeset`initdone$$ = True, Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> "false", "numpods" -> "5", "datatypes" -> 
    "MathWorld", "timedout" -> "", "timedoutpods" -> "", "timing" -> "1.267", 
    "parsetiming" -> "0.", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSPa91521ceed66idciacc600004hb6c58b060ii4e3", "host" -> 
    "http://www2.wolframalpha.com", "server" -> "14", "related" -> "", 
    "version" -> "2.6"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> -4., 
    "Date" -> {2013, 3, 24, 19, 14, 10.235026`7.762663936669073}, "Line" -> 6,
     "SessionID" -> 23416920625700963758}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = 
   False, Typeset`newq$$ = "From adjacency matrix"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{673., {366., 372.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     Not[Typeset`initdone$$], WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = True],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print",
 CellMargins->{{20, 10}, {Inherited, Inherited}},
 CellChangeTimes->{3.5731556511317263`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"01001", "\n", "10100", "\n", "01010", "\n", "00101", "\n", \
"10010"}], "Input",
 CellChangeTimes->{{3.5731557325828543`*^9, 3.573155732584741*^9}}],

Cell[BoxData["1001"], "Output",
 CellChangeTimes->{3.573155733349533*^9}],

Cell[BoxData["10100"], "Output",
 CellChangeTimes->{3.573155733351062*^9}],

Cell[BoxData["1010"], "Output",
 CellChangeTimes->{3.57315573335364*^9}],

Cell[BoxData["101"], "Output",
 CellChangeTimes->{3.573155733355619*^9}],

Cell[BoxData["10010"], "Output",
 CellChangeTimes->{3.5731557333574047`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowGraph", "[", 
  RowBox[{"FromAdjacencyMatrix", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}], 
   "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.573155743349537*^9, 3.573155832140258*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {GrayLevel[0], Thickness[0.005], 
     LineBox[{{0.645841624856078, 0.9749143690630834}, {0.07280133647277633, 
      0.788722292632364}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0], Thickness[0.005], 
     LineBox[{{0.645841624856078, 0.9749143690630834}, {1., 
      0.4874571845315417}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0], Thickness[0.005], 
     LineBox[{{0.07280133647277633, 0.788722292632364}, {0.07280133647277627, 
      0.18619207643071953`}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0], Thickness[0.005], 
     LineBox[{{0.07280133647277627, 0.18619207643071953`}, {
      0.6458416248560779, 0.}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0], Thickness[0.005], 
     LineBox[{{0.6458416248560779, 0.}, {1., 0.4874571845315417}}], 
     {GrayLevel[0]}}}, {
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.645841624856078, 0.9749143690630834}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.07280133647277633, 0.788722292632364}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], 
      PointBox[{0.07280133647277627, 0.18619207643071953`}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.6458416248560779, 0.}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{1., 0.4874571845315417}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0]}}}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->{{0.022801336472776268`, 1.05}, {-0.05, 1.0249143690630833`}},
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{{3.573155772195511*^9, 3.5731558324392853`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ShowGraph", "[", 
  RowBox[{"FromAdjacencyMatrix", "[", 
   RowBox[{"Import", "[", 
    RowBox[{
    "\"\</Users/caw/Projects/RamseyTheory/doc/homework/cycles/m26.txt\>\"", 
     ",", "\"\<Table\>\""}], "]"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.573155847293049*^9, 3.57315584921351*^9}, {
  3.573155927717358*^9, 3.57315593147322*^9}, {3.573156168498674*^9, 
  3.573156174297524*^9}, {3.573156441648658*^9, 3.573156464791539*^9}, {
  3.573156798210165*^9, 3.57315695508022*^9}, {3.573157038019549*^9, 
  3.573157039081978*^9}, {3.5732413830970507`*^9, 3.573241393276867*^9}}],

Cell[BoxData[
 GraphicsBox[{{
    {GrayLevel[0], Thickness[0.005], 
     LineBox[{{0.645841624856078, 0.9749143690630834}, {0.07280133647277633, 
      0.788722292632364}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0], Thickness[0.005], 
     LineBox[{{0.645841624856078, 0.9749143690630834}, {0.6458416248560779, 
      0.}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0], Thickness[0.005], 
     LineBox[{{0.07280133647277633, 0.788722292632364}, {1., 
      0.4874571845315417}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0], Thickness[0.005], 
     LineBox[{{0.07280133647277627, 0.18619207643071953`}, {
      0.6458416248560779, 0.}}], 
     {GrayLevel[0]}}, 
    {GrayLevel[0], Thickness[0.005], 
     LineBox[{{0.07280133647277627, 0.18619207643071953`}, {1., 
      0.4874571845315417}}], 
     {GrayLevel[0]}}}, {
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.645841624856078, 0.9749143690630834}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.07280133647277633, 0.788722292632364}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], 
      PointBox[{0.07280133647277627, 0.18619207643071953`}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{0.6458416248560779, 0.}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0]}}, 
    {GrayLevel[0], 
     {PointSize[0.025], PointBox[{1., 0.4874571845315417}]}, 
     {GrayLevel[0]}, 
     {GrayLevel[0]}}}},
  AlignmentPoint->Center,
  AspectRatio->Automatic,
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->{{0.022801336472776268`, 1.05}, {-0.05, 1.0249143690630833`}},
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{{3.573156452634205*^9, 3.573156465368352*^9}, 
   3.573156751513875*^9, {3.573156798619651*^9, 3.573156955402631*^9}, 
   3.5731570398583612`*^9, {3.573241385960456*^9, 3.573241393524461*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.573155797593248*^9, 3.573155799018094*^9}, 
   3.5731559261407127`*^9}]
},
WindowSize->{740, 752},
WindowMargins->{{Automatic, 10}, {Automatic, 30}},
FrontEndVersion->"8.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (February 23, \
2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 186, 3, 27, "Input"],
Cell[768, 27, 109, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[914, 34, 114, 1, 37, "WolframAlphaLong"],
Cell[1031, 37, 21420, 469, 748, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22488, 511, 163, 2, 88, "Input"],
Cell[22654, 515, 73, 1, 27, "Output"],
Cell[22730, 518, 74, 1, 27, "Output"],
Cell[22807, 521, 72, 1, 27, "Output"],
Cell[22882, 524, 72, 1, 27, "Output"],
Cell[22957, 527, 76, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23070, 533, 672, 16, 58, "Input"],
Cell[23745, 551, 2516, 80, 392, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26298, 636, 610, 11, 58, "Input"],
Cell[26911, 649, 2667, 83, 392, "Output"]
}, Open  ]],
Cell[29593, 735, 120, 2, 27, "Input"]
}
]
*)

(* End of internal cache information *)
